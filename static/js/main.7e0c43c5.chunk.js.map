{"version":3,"sources":["pages/StartGame.jsx","components/NumberPlate.jsx","pages/EightPuzzle.jsx","tetrisConfig.js","components/TetrisBox.jsx","pages/Tetris.jsx","App.js","serviceWorker.js","index.js"],"names":["StartGame","react_default","a","createElement","className","Link","to","Component","NumberPlate","_this$props","this","props","number","setIdx","draggable","onClick","master","0","1","2","3","4","5","6","7","8","EightPuzzle","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","numList","width","height","idxA","idxB","orFinish","initNumList","bind","assertThisInitialized","_this$state","newNumList","i","j","push","shuffleNumList","setState","length","rand","Math","floor","random","_ref","_this2","plates","_loop","components_NumberPlate","key","concat","e","indexOf","_this$state2","target","classList","add","document","getElementsByClassName","notValidSelect","alert","remove","swapPanel","chkFinish","tmp","_this3","_this$state3","gameView","initGame","resetGame","blocks","col","row","block","b","c","d","f","g","fallingBlock","blockID","axis","x","y","blockIDList","conflictFlag","gameOverFlag","TetrisBox","tetrisBox","startGame","initBox","setFallingBlock","updateBox","onKeyDown","addEventListener","updatedBox","rowElem","id","newBlock","assign","orFreeFall","getElementById","orConflictFixBlock","console","log","paintBlock","generateBlock","ops","k","l","contains","keyCode","moveBlock","rotateBlock","old_block_col","old_block_row","newBlockRow","startTimer","setInterval","clearInterval","Tetris","components_TetrisBox","App","HashRouter","basename","process","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e0c43c5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass StartGame\n extends Component {\n  render() {\n    return (\n      <div className=\"StartGame\">\n        <div>ゲームパック2018</div>\n        <div>\n          <div><Link to=\"/eightPuzzle\">エイトパズル</Link></div>\n          <div><Link to=\"/tetris\">テトリス</Link></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StartGame\n;\n","import React, { Component } from 'react';\n\nclass NumberPlate\n extends Component {\n\n  render() {\n    let {number, setIdx} = this.props\n    return (\n      <div className=\"NumberPlate\" draggable=\"true\" onClick={setIdx}>\n        {number}\n      </div>\n    );\n  }\n}\n\nexport default NumberPlate\n;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport NumberPlate from '../components/NumberPlate'\n\nconst master = {\n  0: [0, 1, 3],\n  1: [1, 0, 2, 4],\n  2: [2, 1, 5],\n  3: [3, 0, 4, 6],\n  4: [4, 1, 3, 5, 7],\n  5: [5, 2, 4, 8],\n  6: [6, 3, 7],\n  7: [7, 4, 6, 8],\n  8: [8, 5, 7]\n}\n\nclass EightPuzzle\n extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      numList: [[]],\n      width: 3,\n      height: 3,\n      idxA: null,\n      idxB: null,\n      orFinish: false\n    }\n    this.initNumList = this.initNumList.bind(this)\n    this.setIdx = this.setIdx.bind(this)\n  }\n\n  componentDidMount() {\n    let {width, height} = this.state\n    this.initNumList(width, height)\n  }\n\n  initNumList(width, height) {\n    let newNumList = []\n    for (let i = 0; i < width; i++) {\n      for (let j = 0; j < height; j++) {\n        newNumList.push(i*width+j)\n      }\n    }\n    this.shuffleNumList(newNumList)\n    this.setState({numList: newNumList})\n  }\n\n  shuffleNumList(numList) {\n    for (var i = numList.length - 1; i >= 0; i--){\n      // 0~iのランダムな数値を取得\n      var rand = Math.floor( Math.random() * ( i + 1 ) );\n      // 配列の数値を入れ替える\n      [numList[i], numList[rand]] = [numList[rand], numList[i]]\n    }\n  }\n\n  initGame(width, height) {\n    let plates = []\n    let {numList} = this.state\n    for(let i = 0; i < numList.length; i++) {\n      plates.push(<NumberPlate key={`plate_${i}`} number={numList[i]} setIdx={(e) => {this.setIdx(e, i)}} />)\n    }\n    return plates\n  }\n\n  notValidSelect(idxA, i) {\n    if (master[idxA].indexOf(i) >= 0) {\n      return false\n    } else return true\n  }\n\n  setIdx(e, i) {\n    let plates = []\n    let {numList, idxA} = this.state\n    if (idxA === null) {\n      e.target.classList.add('selected')\n      plates = document.getElementsByClassName('NumberPlate')\n      for (let j=1; j < master[i].length; j++) {\n        plates[master[i][j]].classList.add('selectable')\n      }\n      this.setState({idxA: i})\n    } else {\n      if (this.notValidSelect(idxA, i)) {\n        alert(\"その操作はできません\")\n        return\n      }\n      plates = document.getElementsByClassName('NumberPlate')\n      for (let j=0; j < plates.length; j++) {\n        plates[j].classList.remove('selected')\n        plates[j].classList.remove('selectable')\n      }\n      this.swapPanel(numList, idxA, i)\n      this.setState({idxA: null})\n      if (this.chkFinish(numList)) {\n        for (let j=0; j < plates.length; j++) {\n          plates[j].classList.add('completed')\n          this.setState({orFinish: true})\n        }\n      }\n    }\n  }\n\n  swapPanel(numList, idxA, idxB) {\n    let tmp = numList[idxA]\n    numList[idxA] = numList[idxB]\n    numList[idxB] = tmp\n  }\n\n  chkFinish(numList) {\n    for (let i=0; i < numList.length; i++){\n      if (numList[i] !== i) {\n        return false\n      }\n    }\n    return true\n  }\n\n  resetGame(width, height) {\n    this.initNumList(width, height)\n    let plates = document.getElementsByClassName('NumberPlate')\n    for (let j=0; j < plates.length; j++) {\n      plates[j].classList.remove('selected')\n      plates[j].classList.remove('selectable')\n      plates[j].classList.remove('completed')\n    }\n    this.setState({orFinish: false})\n  }\n\n  render() {\n    let {orFinish, width, height} = this.state\n    let gameView = this.initGame(3, 3)\n    return (\n      <div>\n        {orFinish ? <div className=\"CompMessage\">CONGURATURATION</div> :null}\n        <div className=\"EightPuzzle\">\n          {gameView}\n        </div>\n        {orFinish ? <div className=\"tryAgainButton\" onClick={()=>this.resetGame(width, height)} >もう一度やる</div> : null}\n        <Link to=\"/\">トップに戻る</Link>\n      </div>\n    );\n  }\n}\n\nexport default EightPuzzle\n;\n","export const blocks = {\n  a: {col: 1, row: 4,\n      block: [[1, 1, 1, 1]]},\n  b: {col: 2, row: 3,\n      block: [\n        [0, 1, 0],\n        [1, 1, 1]\n      ]},\n  c: {col: 2, row: 2,\n      block: [\n        [1, 1],\n        [1, 1],\n      ]},\n  d: {col: 2, row: 3,\n      block: [\n        [0, 1, 1],\n        [1, 1, 0],\n      ]},\n  e: {col: 2, row: 3,\n      block: [\n        [1, 1, 0],\n        [0, 1, 1],\n      ]},\n  f: {col: 3, row: 2,\n      block: [\n        [1, 0],\n        [1, 0],\n        [1, 1],\n      ]},\n  g: {col: 3, row: 2,\n      block: [\n        [0, 1],\n        [0, 1],\n        [1, 1],\n      ]},\n}\n","import React, { Component } from 'react';\nimport {blocks} from '../tetrisConfig'\n\nlet fallingBlock = {\n  blockID: '',\n  block: {},\n  axis: {x: 0, y: 0}\n}\nlet bottomLimit = 20\nlet width = 10\nlet height = 20\n\nconst blockIDList = ['a', 'b', 'c', 'd', 'e', 'f', 'g']\nlet conflictFlag = false\nlet gameOverFlag = false\n\nclass TetrisBox\n  extends Component {\n  constructor() {\n    super()\n    this.state = {\n      tetrisBox: []\n    }\n    this.startGame = this.startGame.bind(this)\n    this.initBox = this.initBox.bind(this)\n    this.setFallingBlock = this.setFallingBlock.bind(this)\n    this.updateBox = this.updateBox.bind(this)\n    this.onKeyDown = this.onKeyDown.bind(this)\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n    this.setState({ tetrisBox: this.initBox(width, height) })\n  }\n\n  initBox(width, height) {\n    let updatedBox = []\n    for(let i = 0; i < height; i++) {\n      let row = []\n      for(let j=0; j < width; j++) {\n        let rowElem\n        rowElem = <div id={`row_${j}_${i}`} key={`row_${j}_${i}`} className=\"TetrisBox-row\" > </div>\n        row.push(rowElem)\n      }\n      updatedBox.push(<div id={`col_${i}`} key={`col_${i}`} className=\"TetrisBox-col\">{row}</div>  )\n    }\n    return updatedBox\n  }\n\n  generateBlock() {\n    let random = Math.floor( Math.random() * blockIDList.length )\n    let blockID = blockIDList[random]\n    let newBlock = Object.assign({}, blocks[blockID])\n    let newFallingBlock = {\n      blockID: blockID,\n      block: newBlock,\n      axis: {x: 0, y: 0}\n    }\n    fallingBlock = newFallingBlock\n  }\n\n  setFallingBlock(axis) {\n    fallingBlock.axis = {x: axis.x, y: axis.y}\n  }\n\n  updateBox(orFreeFall) {\n    let x = fallingBlock.axis.x\n    let y = fallingBlock.axis.y\n    let block = fallingBlock.block\n\n    // ブロックのポジションをセット\n    this.setFallingBlock({x: x, y: y})\n    for(let i = 0; i < height; i++) {\n      for(let j=0; j < width; j++) {\n        // ブロックが落下中ならブロックを塗りつぶす\n        let rowElem = document.getElementById(`row_${j}_${i}`)\n        if (fallingBlock.blockID !== '') {\n          // ブロックの範囲を塗りつぶす\n          if (j >= x && j < x + block.row && i >= y && i< y + block.col) {\n            // 地面に衝突した場合 固定されたブロックと衝突した場合\n            if (y + block.col >= bottomLimit || this.orConflictFixBlock('down', x, y, block)) {\n              console.log('CONFLICT OCCURED');\n              conflictFlag = true\n              this.paintBlock(i, j, x, y, rowElem, block, conflictFlag)\n              if (y <= 3) {\n                gameOverFlag = true\n              }\n            }\n            // 衝突していない場合\n            else {\n              this.paintBlock(i, j, x, y, rowElem, block, conflictFlag)\n            }\n          } else {\n            rowElem.classList.remove(fallingBlock.blockID)\n          }\n\n        } else {\n          rowElem.classList.remove(fallingBlock.blockID)\n        }\n      }\n    }\n    if (conflictFlag) {\n      this.generateBlock()\n      conflictFlag = false\n    } else if (orFreeFall) {\n      y += 1\n      this.setFallingBlock({x: x, y: y})\n    }\n  }\n\n  orConflictFixBlock(ops, x, y, block) {\n    let compBlockElem\n    // 全ブロックの1つ下に固定されたブロックがないかチェック\n    switch (ops) {\n      case 'down':\n        for (let k=0; k < block.col; k++) {\n          for (let l=0; l < block.row; l++) {\n            if (block.block[k][l]) {\n              compBlockElem = document.getElementById(`row_${x+l}_${y+k+1}`)\n              if (compBlockElem.classList.contains('fix')) return true\n            }\n          }\n        }\n        break;\n\n      case 'left':\n        for (let k=0; k < block.col; k++) {\n            if (block.block[k][0]) {\n              compBlockElem = document.getElementById(`row_${x-1}_${y+k}`)\n              if (compBlockElem.classList.contains('fix')) return true\n            }\n        }\n        break;\n\n      case 'right':\n        for (let k=0; k < block.col; k++) {\n            if (block.block[k][block.row-1]) {\n              compBlockElem = document.getElementById(`row_${x+block.row}_${y+k}`)\n              if (compBlockElem.classList.contains('fix')) return true\n            }\n        }\n        break;\n\n      default:\n    }\n    return false\n  }\n\n  // ブロックの範囲を塗りつぶす\n  paintBlock(i, j, x, y, rowElem, block, conflictFlag) {\n    if (block.block[i-y][j-x]) {\n      rowElem.classList.add(fallingBlock.blockID)\n      if (conflictFlag) {\n        rowElem.classList.add('fix')\n      }\n    } else {\n      rowElem.classList.remove(fallingBlock.blockID)\n    }\n  }\n\n  // コントローラー\n  onKeyDown(e) {\n    // 左キー\n    if (e.keyCode === 37) {\n      this.moveBlock('left')\n    // 右キー\n    } else if (e.keyCode === 39) {\n      this.moveBlock('right')\n    // 下キー\n    } else if(e.keyCode === 40) {\n      this.moveBlock('down')\n    // Qキー\n    } else if(e.keyCode === 81) {\n      this.rotateBlock('left');\n    // Wキー\n    } else if(e.keyCode === 87) {\n      this.rotateBlock('right');\n    }\n  }\n  // 左キーを押した時\n  moveBlock(ops) {\n    let x = fallingBlock.axis.x\n    let y = fallingBlock.axis.y\n    let block = fallingBlock.block\n    let orFreeFall = false\n    switch (ops) {\n      case 'left':\n        // 壁に衝突した場合\n        if (x <= 0) {\n          return\n        } else if (this.orConflictFixBlock('left', x, y, block)) {\n          return\n        } else {\n          fallingBlock.axis.x -= 1\n          this.updateBox(orFreeFall)\n        }\n        break;\n      case 'right':\n        // 壁に衝突した場合\n        if (x + block.row >= width) {\n          return\n        } else if (this.orConflictFixBlock('right' , x, y, block)) {\n          return\n        } else {\n          fallingBlock.axis.x += 1\n          this.updateBox(orFreeFall)\n        }\n        break\n      case 'down':\n        if (y + block.col >= height) {\n          return\n        } else if (this.orConflictFixBlock('down', x, y, block)) {\n          return\n        } else {\n          fallingBlock.axis.y += 1\n          this.updateBox(orFreeFall)\n        }\n        break\n      default:\n    }\n  }\n\n  // スペースキーを押した時\n  rotateBlock(ops) {\n    let orFreeFall = false\n    let block = fallingBlock.block\n    let old_block_col = block.col\n    let old_block_row = block.row\n    let newBlock = []\n    let newBlockRow = []\n    block.row = old_block_col\n    block.col = old_block_row\n    switch (ops) {\n      case 'left':\n        for(let i = old_block_row - 1; i >= 0; i--) {\n          newBlockRow = []\n          for(let j = 0; j < old_block_col; j++) {\n            newBlockRow.push(block.block[j][i])\n          }\n          newBlock.push(newBlockRow)\n        }\n        block.block = newBlock\n        this.updateBox(orFreeFall)\n        break\n      case 'right':\n        for(let i = 0; i < old_block_row; i++) {\n          newBlockRow = []\n          for(let j = old_block_col - 1; j >= 0; j--) {\n            newBlockRow.push(block.block[j][i])\n          }\n          newBlock.push(newBlockRow)\n        }\n        block.block = newBlock\n        this.updateBox(orFreeFall)\n        break\n      default:\n    }\n  }\n\n  startGame() {\n    let orFreeFall = true\n    let startTimer\n    this.generateBlock()\n    startTimer = setInterval(() => {\n      this.updateBox(orFreeFall)\n      if (gameOverFlag) {\n        clearInterval(startTimer);\n      }\n    }, 700)\n  }\n\n  render() {\n    let {tetrisBox} = this.state\n\n    return (\n      <div>\n        <div className=\"StartGame\" onClick={this.startGame}>ゲームスタート</div>\n        <div className=\"TetrisBox\">\n          {tetrisBox}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TetrisBox\n;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport TetrisBox from '../components/TetrisBox'\n\nclass Tetris\n extends Component {\n\n  render() {\n    return (\n      <div>\n        <div className=\"Tetris\">\n          <TetrisBox />\n        </div>\n        <Link to=\"/\">トップに戻る</Link>\n      </div>\n    );\n}\n}\n\nexport default Tetris\n;\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom'\nimport StartGame from './pages/StartGame'\nimport EightPuzzle from './pages/EightPuzzle'\nimport Tetris from './pages/Tetris'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <HashRouter basename={process.env.PUBLIC_URL}>\n          <div>\n            <Route exact path='/' component={StartGame} />\n            <Route exact path='/eightPuzzle' component={EightPuzzle} />\n            <Route exact path='/tetris' component={Tetris} />\n          </div>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}